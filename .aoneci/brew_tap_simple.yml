# Simplified Aone CICD Configuration for AgbCloud CLI
# This is a minimal configuration that should work with Aone platform

image: registry.cn-hangzhou.aliyuncs.com/acs/golang:1.23

variables:
  BINARY_NAME: agbcloud
  OSS_BUCKET: agbcloud-internal
  OSS_ENDPOINT: oss-cn-hangzhou.aliyuncs.com
  BREW_TAP_REPO: git@gitlab.alibaba-inc.com:InnoArchClub/homebrew-agbcloud.git

test:
  script:
    - echo "Running tests..."
    - make test-unit
    - make test-integration
    - make lint

build:
  script:
    - echo "Building for all platforms..."
    - export VERSION="dev-$(date +%Y%m%d-%H%M)"
    - export GIT_COMMIT=$(git rev-parse --short HEAD)
    - make build-all
    - ls -la bin/
  artifacts:
    paths:
      - bin/
    expire_in: 2 hours
  only:
    - master
    - main

package:
  script:
    - echo "Creating packages..."
    - export VERSION="dev-$(date +%Y%m%d-%H%M)"
    - mkdir -p packages
    - |
      for binary in bin/*; do
        if [[ -f "$binary" ]]; then
          filename=$(basename "$binary")
          platform_arch=${filename#agbcloud-}
          temp_dir=$(mktemp -d)
          cp "$binary" "$temp_dir/agbcloud"
          tar -czf "packages/agbcloud-$VERSION-$platform_arch.tar.gz" -C "$temp_dir" agbcloud
          sha256sum "packages/agbcloud-$VERSION-$platform_arch.tar.gz" > "packages/agbcloud-$VERSION-$platform_arch.tar.gz.sha256"
          rm -rf "$temp_dir"
          echo "Created package agbcloud-$VERSION-$platform_arch.tar.gz"
        fi
      done
    - ls -la packages/
  artifacts:
    paths:
      - packages/
    expire_in: 7 days
  dependencies:
    - build
  only:
    - master
    - main

upload:
  script:
    - echo "Uploading packages to OSS..."
    - export VERSION="dev-$(date +%Y%m%d-%H%M)"
    - |
      if [[ -z "$OSS_ACCESS_KEY_ID" ]] || [[ -z "$OSS_ACCESS_KEY_SECRET" ]]; then
        echo "Error: OSS credentials not set"
        exit 1
      fi
    - |
      if ! command -v ossutil >/dev/null 2>&1; then
        curl -L "https://gosspublic.alicdn.com/ossutil/1.7.19/ossutil-v1.7.19-linux-amd64.zip" -o ossutil.zip
        unzip -q ossutil.zip
        chmod +x ossutil*
        mv ossutil* /usr/local/bin/ossutil
        rm -f ossutil.zip
      fi
    - ossutil config -e "$OSS_ENDPOINT" -i "$OSS_ACCESS_KEY_ID" -k "$OSS_ACCESS_KEY_SECRET"
    - |
      for package in packages/*.tar.gz packages/*.sha256; do
        if [[ -f "$package" ]]; then
          filename=$(basename "$package")
          ossutil cp "$package" "oss://$OSS_BUCKET/agbcloud/releases/$filename" --force
          ossutil set-acl "oss://$OSS_BUCKET/agbcloud/releases/$filename" public-read
          echo "Uploaded $filename"
        fi
      done
    - echo "All packages uploaded successfully!"
  dependencies:
    - package
  only:
    - master
    - main

deploy:
  script:
    - echo "Updating Homebrew Tap..."
    - export VERSION="dev-$(date +%Y%m%d-%H%M)"
    - export GIT_COMMIT=$(git rev-parse --short HEAD)
    - export TIMESTAMP=$(date +%Y%m%d-%H%M)
    - git clone "$BREW_TAP_REPO" homebrew-agbcloud
    - cd homebrew-agbcloud
    - git config user.name "Aone CICD Bot"
    - git config user.email "cicd@alibaba-inc.com"
    - |
      SANITIZED_TIMESTAMP=$(echo "$TIMESTAMP" | tr '-' '')
      PACKAGE_DIR="../packages"
      
      get_sha256() {
          local platform_arch=$1
          local sha256_file="$PACKAGE_DIR/agbcloud-$VERSION-$platform_arch.tar.gz.sha256"
          if [[ -f "$sha256_file" ]]; then
              cut -d' ' -f1 "$sha256_file"
          else
              echo "MISSING_SHA256"
          fi
      }
      
      DARWIN_AMD64_SHA256=$(get_sha256 "darwin-amd64")
      DARWIN_ARM64_SHA256=$(get_sha256 "darwin-arm64")
      LINUX_AMD64_SHA256=$(get_sha256 "linux-amd64")
      LINUX_ARM64_SHA256=$(get_sha256 "linux-arm64")
      
      FORMULA_FILE="Formula/agbcloud@dev-$TIMESTAMP.rb"
      
      cat > "$FORMULA_FILE" << EOF
      class AgbcloudAT${SANITIZED_TIMESTAMP} < Formula
        desc "AgbCloud CLI - Test Build $TIMESTAMP"
        homepage "https://alibaba-inc.com/agbcloud"
        version "$VERSION"
      
        if OS.mac?
          if Hardware::CPU.arm?
            url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-darwin-arm64.tar.gz"
            sha256 "$DARWIN_ARM64_SHA256"
          else
            url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-darwin-amd64.tar.gz"
            sha256 "$DARWIN_AMD64_SHA256"
          end
        elsif OS.linux?
          if Hardware::CPU.arm?
            url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-linux-arm64.tar.gz"
            sha256 "$LINUX_ARM64_SHA256"
          else
            url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-linux-amd64.tar.gz"
            sha256 "$LINUX_AMD64_SHA256"
          end
        end
      
        def install
          bin.install "agbcloud"
        end
      
        test do
          system "#{bin}/agbcloud", "version"
        end
      end
      EOF
      
      echo "Formula generated: $FORMULA_FILE"
    - git add "Formula/agbcloud@dev-$TIMESTAMP.rb"
    - git commit -m "Add test build agbcloud@dev-$TIMESTAMP"
    - git push origin main
    - echo "Homebrew Tap updated successfully!"
    - echo "Users can install with: brew install agbcloud@dev-$TIMESTAMP"
  dependencies:
    - package
  only:
    - master
    - main 