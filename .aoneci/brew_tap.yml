# AgbCloud CLI Homebrew Tap 测试包分发流水线
name: AgbCloud CLI Test Package Distribution

# 自动触发条件
triggers:
  push:
    branches:
      - master
      - main

# 全局变量
variables:
  BINARY_NAME: agbcloud
  OSS_BUCKET: agbcloud-internal
  OSS_ENDPOINT: oss-cn-hangzhou.aliyuncs.com
  BREW_TAP_REPO: git@gitlab.alibaba-inc.com:InnoArchClub/homebrew-agbcloud.git

# 流水线作业定义
jobs:
  # 构建、打包、上传、部署
  build-and-deploy:
    name: 构建并部署
    runs-on: 4-16Gi
    timeout: 60m
    steps:
      - uses: checkout
      - uses: setup-env
        inputs:
          go-version: "1.23"
          go-mod-cache: true
          go-cache: false
      - id: build-binaries
        name: 构建多平台二进制文件
        run: |
          echo "Building for all platforms..."
          export VERSION="dev-$(date +%Y%m%d-%H%M)"
          export GIT_COMMIT=$(git rev-parse --short HEAD)
          export BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "Building version: $VERSION"
          echo "Git commit: $GIT_COMMIT"
          make build-all
          ls -la bin/

      - id: create-packages
        name: 创建安装包
        run: |
          echo "Creating packages..."
          export VERSION="dev-$(date +%Y%m%d-%H%M)"
          mkdir -p packages
          
          for binary in bin/*; do
            if [[ -f "$binary" ]]; then
              filename=$(basename "$binary")
              platform_arch=${filename#agbcloud-}
              
              temp_dir=$(mktemp -d)
              cp "$binary" "$temp_dir/agbcloud"
              tar -czf "packages/agbcloud-$VERSION-$platform_arch.tar.gz" -C "$temp_dir" agbcloud
              sha256sum "packages/agbcloud-$VERSION-$platform_arch.tar.gz" > "packages/agbcloud-$VERSION-$platform_arch.tar.gz.sha256"
              rm -rf "$temp_dir"
              echo "✓ Created package: agbcloud-$VERSION-$platform_arch.tar.gz"
            fi
          done
          
          ls -la packages/

      - id: upload-to-oss
        name: 上传到 OSS
        run: |
          echo "Uploading packages to OSS..."
          export VERSION="dev-$(date +%Y%m%d-%H%M)"
          
          # 检查环境变量
          if [[ -z "$OSS_ACCESS_KEY_ID" ]] || [[ -z "$OSS_ACCESS_KEY_SECRET" ]]; then
            echo "Error: OSS credentials not set"
            exit 1
          fi
          
          # 安装 ossutil
          if ! command -v ossutil >/dev/null 2>&1; then
            echo "Installing ossutil..."
            curl -L "https://gosspublic.alicdn.com/ossutil/1.7.19/ossutil-v1.7.19-linux-amd64.zip" -o ossutil.zip
            unzip -q ossutil.zip
            chmod +x ossutil*
            mv ossutil* /usr/local/bin/ossutil
            rm -f ossutil.zip
          fi
          
          # 配置并上传
          ossutil config -e "$OSS_ENDPOINT" -i "$OSS_ACCESS_KEY_ID" -k "$OSS_ACCESS_KEY_SECRET"
          
          for package in packages/*.tar.gz packages/*.sha256; do
            if [[ -f "$package" ]]; then
              filename=$(basename "$package")
              ossutil cp "$package" "oss://$OSS_BUCKET/agbcloud/releases/$filename" --force
              ossutil set-acl "oss://$OSS_BUCKET/agbcloud/releases/$filename" public-read
              echo "✓ Uploaded: $filename"
            fi
          done

      - id: update-homebrew-tap
        name: 更新 Homebrew Tap
        run: |
          echo "Updating Homebrew Tap..."
          export VERSION="dev-$(date +%Y%m%d-%H%M)"
          export GIT_COMMIT=$(git rev-parse --short HEAD)
          export TIMESTAMP=$(date +%Y%m%d-%H%M)
          export SANITIZED_TIMESTAMP=$(echo "$TIMESTAMP" | tr '-' '')
          
          # 克隆 tap 仓库
          git clone "$BREW_TAP_REPO" homebrew-agbcloud
          cd homebrew-agbcloud
          
          # 配置 git
          git config user.name "Aone CICD Bot"
          git config user.email "cicd@alibaba-inc.com"
          
          # 获取 SHA256 值
          get_sha256() {
              local platform_arch=$1
              local sha256_file="../packages/agbcloud-$VERSION-$platform_arch.tar.gz.sha256"
              if [[ -f "$sha256_file" ]]; then
                  cut -d' ' -f1 "$sha256_file"
              else
                  echo "MISSING_SHA256"
              fi
          }
          
          DARWIN_AMD64_SHA256=$(get_sha256 "darwin-amd64")
          DARWIN_ARM64_SHA256=$(get_sha256 "darwin-arm64")
          LINUX_AMD64_SHA256=$(get_sha256 "linux-amd64")
          LINUX_ARM64_SHA256=$(get_sha256 "linux-arm64")
          
          # 生成 Formula
          FORMULA_FILE="Formula/agbcloud@dev-$TIMESTAMP.rb"
          
          cat > "$FORMULA_FILE" << EOF
          class AgbcloudAT${SANITIZED_TIMESTAMP} < Formula
            desc "AgbCloud CLI - Test Build $TIMESTAMP"
            homepage "https://alibaba-inc.com/agbcloud"
            version "$VERSION"
          
            if OS.mac?
              if Hardware::CPU.arm?
                url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-darwin-arm64.tar.gz"
                sha256 "$DARWIN_ARM64_SHA256"
              else
                url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-darwin-amd64.tar.gz"
                sha256 "$DARWIN_AMD64_SHA256"
              end
            elsif OS.linux?
              if Hardware::CPU.arm?
                url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-linux-arm64.tar.gz"
                sha256 "$LINUX_ARM64_SHA256"
              else
                url "https://agbcloud-internal.oss-cn-hangzhou.aliyuncs.com/agbcloud/releases/agbcloud-$VERSION-linux-amd64.tar.gz"
                sha256 "$LINUX_AMD64_SHA256"
              end
            end
          
            def install
              bin.install "agbcloud"
            end
          
            test do
              system "#{bin}/agbcloud", "version"
            end
          
            def caveats
              <<~EOS
                This is a test build of AgbCloud CLI.
                Build timestamp: $TIMESTAMP
                Git commit: $GIT_COMMIT
                
                To switch between versions:
                  brew unlink agbcloud@${SANITIZED_TIMESTAMP}
                  brew link agbcloud@other-version
              EOS
            end
          end
          EOF
          
          # 提交更改
          git add "$FORMULA_FILE"
          git commit -m "Add test build agbcloud@dev-$TIMESTAMP

          Version: $VERSION
          Git commit: $GIT_COMMIT
          Build timestamp: $TIMESTAMP"
          
          git push origin main
          
          echo "✅ Homebrew Tap updated successfully!"
          echo "Users can install with: brew install agbcloud@dev-$TIMESTAMP"

      - id: send-notification
        name: 发送通知
        run: |
          export VERSION="dev-$(date +%Y%m%d-%H%M)"
          export TIMESTAMP=$(date +%Y%m%d-%H%M)
          
          echo "🎉 AgbCloud CLI 测试包构建完成！
          
          📦 版本: $VERSION
          🕒 时间戳: $TIMESTAMP
          📝 Git 提交: $(git rev-parse --short HEAD)
          
          🍺 安装命令:
          brew install agbcloud@dev-$TIMESTAMP" 